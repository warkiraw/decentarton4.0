"""
–ü—Ä–æ—Å—Ç–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ 2 –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 60 —Å–æ–≥–ª–∞—Å–Ω–æ –¢–ó.
"""

import pandas as pd
import numpy as np

def add_missing_clients():
    """–î–æ–±–∞–≤–ª—è–µ—Ç –∫–ª–∏–µ–Ω—Ç–æ–≤ 34 –∏ 45 –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è 60 –∫–ª–∏–µ–Ω—Ç–æ–≤."""
    
    print("üîß –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–æ–≤ 34 –∏ 45...")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ
    clients = pd.read_csv('../data/clients.csv')
    transactions = pd.read_csv('../data/transactions.csv')
    transfers = pd.read_csv('../data/transfers.csv')
    
    # –ö–ª–∏–µ–Ω—Ç 34: FX –∞–∫—Ç–∏–≤–Ω—ã–π (–¥–ª—è –æ–±–º–µ–Ω–∞ –≤–∞–ª—é—Ç)
    client_34 = pd.DataFrame([{
        'client_code': 34,
        'name': '–ê–π–¥–∞—Ä',
        'status': '–ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –∫–ª–∏–µ–Ω—Ç',
        'age': 35,
        'city': '–ê–ª–º–∞—Ç—ã',
        'avg_monthly_balance_KZT': 800000
    }])
    
    # –ö–ª–∏–µ–Ω—Ç 45: Travel –∞–∫—Ç–∏–≤–Ω—ã–π (–¥–ª—è –∫–∞—Ä—Ç—ã –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π)
    client_45 = pd.DataFrame([{
        'client_code': 45,
        'name': '–î–∏–∞–Ω–∞',
        'status': '–ó–∞—Ä–ø–ª–∞—Ç–Ω—ã–π –∫–ª–∏–µ–Ω—Ç',
        'age': 27,
        'city': '–ê—Å—Ç–∞–Ω–∞',
        'avg_monthly_balance_KZT': 400000
    }])
    
    # –ü—Ä–æ—Å—Ç—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ 34 (FX –ø—Ä–æ—Ñ–∏–ª—å)
    trans_34 = []
    for i in range(50):
        trans_34.append({
            'client_code': 34,
            'name': '–ê–π–¥–∞—Ä',
            'product': '–û–±–º–µ–Ω –≤–∞–ª—é—Ç',
            'status': '–≤–∏–ø',
            'city': '–ê–ª–º–∞—Ç—ã',
            'date': '2025-06-15',
            'category': np.random.choice(['–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã', '–¢–∞–∫—Å–∏', '–ê–ó–°']),
            'amount': np.random.uniform(5000, 25000),
            'currency': 'KZT'
        })
    
    # –ü—Ä–æ—Å—Ç—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ 45 (Travel –ø—Ä–æ—Ñ–∏–ª—å)
    trans_45 = []
    for i in range(50):
        trans_45.append({
            'client_code': 45,
            'name': '–î–∏–∞–Ω–∞',
            'product': '–ö–∞—Ä—Ç–∞ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π',
            'status': '–∑–ø',
            'city': '–ê—Å—Ç–∞–Ω–∞',
            'date': '2025-06-15',
            'category': np.random.choice(['–¢–∞–∫—Å–∏', '–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è', '–û—Ç–µ–ª–∏', '–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã']),
            'amount': np.random.uniform(3000, 15000),
            'currency': 'KZT'
        })
    
    # –ü–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ 34 (–º–Ω–æ–≥–æ FX)
    transfers_34 = []
    for i in range(30):
        if i < 10:  # FX –æ–ø–µ—Ä–∞—Ü–∏–∏
            transfers_34.append({
                'client_code': 34,
                'date': '2025-06-15',
                'type': np.random.choice(['fx_buy', 'fx_sell']),
                'direction': np.random.choice(['in', 'out']),
                'amount': np.random.uniform(10000, 50000),
                'currency': 'USD'
            })
        else:  # –û–±—ã—á–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            transfers_34.append({
                'client_code': 34,
                'date': '2025-06-15',
                'type': np.random.choice(['card_out', 'salary_in', 'p2p_out']),
                'direction': np.random.choice(['in', 'out']),
                'amount': np.random.uniform(5000, 30000),
                'currency': 'KZT'
            })
    
    # –ü–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ 45 (—Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ + –Ω–µ–º–Ω–æ–≥–æ FX)
    transfers_45 = []
    for i in range(30):
        if i < 3:  # –ù–µ–º–Ω–æ–≥–æ FX –¥–ª—è travel
            transfers_45.append({
                'client_code': 45,
                'date': '2025-06-15',
                'type': 'fx_buy',
                'direction': 'out',
                'amount': np.random.uniform(5000, 15000),
                'currency': 'USD'
            })
        else:  # –û–±—ã—á–Ω—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏
            transfers_45.append({
                'client_code': 45,
                'date': '2025-06-15',
                'type': np.random.choice(['card_out', 'salary_in', 'atm_withdrawal']),
                'direction': np.random.choice(['in', 'out']),
                'amount': np.random.uniform(3000, 20000),
                'currency': 'KZT'
            })
    
    # –û–±—ä–µ–¥–∏–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
    new_clients = pd.concat([clients, client_34, client_45], ignore_index=True)
    new_transactions = pd.concat([transactions, pd.DataFrame(trans_34), pd.DataFrame(trans_45)], ignore_index=True)
    new_transfers = pd.concat([transfers, pd.DataFrame(transfers_34), pd.DataFrame(transfers_45)], ignore_index=True)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º
    new_clients.to_csv('../data/clients.csv', index=False)
    new_transactions.to_csv('../data/transactions.csv', index=False)
    new_transfers.to_csv('../data/transfers.csv', index=False)
    
    print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç–æ–≤: {len(new_clients)} (–±—ã–ª–æ {len(clients)})")
    print(f"‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: {len(new_transactions)} (–±—ã–ª–æ {len(transactions)})")
    print(f"‚úÖ –ü–µ—Ä–µ–≤–æ–¥–æ–≤: {len(new_transfers)} (–±—ã–ª–æ {len(transfers)})")

if __name__ == "__main__":
    add_missing_clients()